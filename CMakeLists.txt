cmake_minimum_required(VERSION 2.8)

####################################
# This CMake script is specific to #
# the automated build system.      #
# Do not edit this file unless you #
# know exactly what you are doing. #
####################################

#--------------------------#
#    base configuration    #
# do not edit this section #
#--------------------------#

include(FRCDeploy)
project(robot_code)
find_package(WPILib)
file(GLOB_RECURSE SOURCE_CODE *.cpp)

#-----------------#
# end base config #
#-----------------#


# setting key vars
set(WIND_BASE ../wind/updated_vxworks63gccdist/gccdist/WindRiver/vxworks-6.3)

# extra compiler flags. If -mlongcall or 
# any other GCC flag is needed, place it here.
set(CMAKE_CXX_FLAGS ${CMAKE_CXX_FALGS} -Wno-parentheses)



# Include section 
#  CMake won't recurse through 
#  directories by itself, 
#  so this mess is required.

include_directories(${WPILib_INCLUDE_DIRS})

# std libraries
include_directories(../wind/updated_vxworks63gccdist/gccdist/WindRiver/gnu/3.4.4-vxworks-6.3/x86-win32/include/c++/3.4.4)
include_directories(../wind/updated_vxworks63gccdist/gccdist/WindRiver/gnu/3.4.4-vxworks-6.3/x86-win32/include/c++)
include_directories(../wind/updated_vxworks63gccdist/gccdist/WindRiver/gnu/3.4.4-vxworks-6.3/x86-win32/include)

# VxWorks headers
include_directories(${WIND_BASE}/target/h)
include_directories(${WIND_BASE}/target/h/arch)
include_directories(${WIND_BASE}/target/h/arch/ppc)
include_directories(${WIND_BASE}/target/h/arch/ppc/private)
include_directories(${WIND_BASE}/target/h/arch/simlinux)
include_directories(${WIND_BASE}/target/h/arch/simnt)
include_directories(${WIND_BASE}/target/h/arch/simsolaris)
include_directories(${WIND_BASE}/target/h/base)
include_directories(${WIND_BASE}/target/h/drv)
include_directories(${WIND_BASE}/target/h/drv/dma)
include_directories(${WIND_BASE}/target/h/drv/end)
include_directories(${WIND_BASE}/target/h/drv/erf)
include_directories(${WIND_BASE}/target/h/drv/fdisk)
include_directories(${WIND_BASE}/target/h/drv/hdisk)
include_directories(${WIND_BASE}/target/h/drv/i2c)
include_directories(${WIND_BASE}/target/h/drv/intrCtl)
include_directories(${WIND_BASE}/target/h/drv/manager)
include_directories(${WIND_BASE}/target/h/drv/mem)
include_directories(${WIND_BASE}/target/h/drv/mem/unsupported)
include_directories(${WIND_BASE}/target/h/drv/multi)
include_directories(${WIND_BASE}/target/h/drv/paralell)
include_directories(${WIND_BASE}/target/h/drv/pci)
include_directories(${WIND_BASE}/target/h/drv/pcmcia)
include_directories(${WIND_BASE}/target/h/drv/rtc/unsupported)
include_directories(${WIND_BASE}/target/h/drv/scsi)
include_directories(${WIND_BASE}/target/h/drv/serial)
include_directories(${WIND_BASE}/target/h/drv/sio)
include_directories(${WIND_BASE}/target/h/drv/sound)
include_directories(${WIND_BASE}/target/h/drv/timer)
include_directories(${WIND_BASE}/target/h/drv/usb)
include_directories(${WIND_BASE}/target/h/drv/usb/target)
include_directories(${WIND_BASE}/target/h/drv/vme/unsupported)
include_directories(${WIND_BASE}/target/h/drv/wdb)
include_directories(${WIND_BASE}/target/h/drv/wdb/vision)
include_directories(${WIND_BASE}/target/h/drv/xbd)
include_directories(${WIND_BASE}/target/h/dsi)
include_directories(${WIND_BASE}/target/h/dsi/un)
include_directories(${WIND_BASE}/target/h/hwif/util)
include_directories(${WIND_BASE}/target/h/hwif/vxbus)
include_directories(${WIND_BASE}/target/h/make)
include_directories(${WIND_BASE}/target/h/make/config)
include_directories(${WIND_BASE}/target/h/net)
include_directories(${WIND_BASE}/target/h/pfw)
include_directories(${WIND_BASE}/target/h/ppp)
include_directories(${WIND_BASE}/target/h/ppp/interfaces)
include_directories(${WIND_BASE}/target/h/ppp/snmpAgent)
include_directories(${WIND_BASE}/target/h/private)
include_directories(${WIND_BASE}/target/h/private/pfw)
include_directories(${WIND_BASE}/target/h/private/ppp)
include_directories(${WIND_BASE}/target/h/rpc)
include_directories(${WIND_BASE}/target/h/ssi)
include_directories(${WIND_BASE}/target/h/sys)
include_directories(${WIND_BASE}/target/h/tffs)
include_directories(${WIND_BASE}/target/h/tpic)
include_directories(${WIND_BASE}/target/h/tool/common)
include_directories(${WIND_BASE}/target/h/tool/common/ldscripts)
include_directories(${WIND_BASE}/target/h/tool/diab)
include_directories(${WIND_BASE}/target/h/tool/diab/ldscripts)
include_directories(${WIND_BASE}/target/h/tool/gnu)
include_directories(${WIND_BASE}/target/h/tool/gnu/ldscripts)
include_directories(${WIND_BASE}/target/h/types)
include_directories(${WIND_BASE}/target/h/usb)
include_directories(${WIND_BASE}/target/h/usb/target)
include_directories(${WIND_BASE}/target/h/usb/tools)
include_directories(${WIND_BASE}/target/h/usb2)
include_directories(${WIND_BASE}/target/h/wdb)
include_directories(${WIND_BASE}/target/h/WPILib)
include_directories(${WIND_BASE}/target/h/wrn)
include_directories(${WIND_BASE}/target/h/wrn/coreip)
include_directories(${WIND_BASE}/target/h/wrn/coreip/arch)
include_directories(${WIND_BASE}/target/h/wrn/coreip/arpa)
include_directories(${WIND_BASE}/target/h/wrn/coreip/dhcp)
include_directories(${WIND_BASE}/target/h/wrn/coreip/dlink)
include_directories(${WIND_BASE}/target/h/wrn/coreip/fastPath)
include_directories(${WIND_BASE}/target/h/wrn/coreip/mib)
include_directories(${WIND_BASE}/target/h/wrn/coreip/net)
include_directories(${WIND_BASE}/target/h/wrn/coreip/net/utils)
include_directories(${WIND_BASE}/target/h/wrn/coreip/netinet)
include_directories(${WIND_BASE}/target/h/wrn/coreip/netinet6)
include_directories(${WIND_BASE}/target/h/wrn/coreip/private)
include_directories(${WIND_BASE}/target/h/wrn/coreip/protos)
include_directories(${WIND_BASE}/target/h/wrn/coreip/resolv)
include_directories(${WIND_BASE}/target/h/wrn/coreip/rip)
include_directories(${WIND_BASE}/target/h/wrn/coreip/route)
include_directories(${WIND_BASE}/target/h/wrn/coreip/rtadv)
include_directories(${WIND_BASE}/target/h/wrn/coreip/sys)


# final bit of the base config

add_executable(robot_module ${SOURCE_CODE})
target_link_libraries(robot_module ${WPILib_LIBRARY})
add_make_deploy(robot_module 10.16.22.2)
